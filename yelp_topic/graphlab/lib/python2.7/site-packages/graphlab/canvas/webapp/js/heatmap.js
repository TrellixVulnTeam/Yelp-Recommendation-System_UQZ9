define("heatmap",["react","plots","common_util","taskqueue","common_controls"],function(React,Plots,Util,TaskQueue,Controls){"use strict";return{View:React.createClass({mixins:[Controls.AsyncState],getInitialState:function(props){if(!props){props=this.props}return{extrema:props.ipython?props.extrema:{},domainToShow:props.ipython?props.domainToShow:{},xLabel:props.selected_variable.view_params.x,yLabel:props.selected_variable.view_params.y,width:500,height:500,shouldShowStopDownload:false,pointsLoaded:props.ipython?props.pointsLoaded:0,binData:props.ipython?props:{}}},updateAsyncState:function(nextProps){this.setState({numValues:nextProps.selected_variable.descriptives.rows});var view_params=Util.tryGetProperty(nextProps,["selected_variable","view_params"]);var x=Util.tryGetProperty(view_params,"x");var y=Util.tryGetProperty(view_params,"y");if(x&&y){this.addTask(new TaskQueue.ProgressTask("/bins",".bins()",function(data){this.setState({shouldShowStopDownload:!data["complete"],binData:data,extrema:data["extrema"],pointsLoaded:data["pointsLoaded"],domainToShow:data["domainToShow"]})}.bind(this)))}},cancelTasks:function(){this.cancelAllTasks();this.setState({shouldShowStopDownload:false})},render:function(){var plotToShow;var button=null;var pointsLoaded=null;var br=null;if(this.state.extrema.minX==null||this.state.domainToShow.minX==null||this.state.binData.bins==null)return React.DOM.div(null," ");plotToShow=Plots.Heatmap({bins:this.state.binData.bins,binWidth:this.state.binData.binWidth,binHeight:this.state.binData.binHeight,extrema:this.state.extrema,domainToShow:this.state.domainToShow,xLabel:this.state.xLabel,yLabel:this.state.yLabel,width:this.state.width,height:this.state.height,numValues:this.state.numValues,selectVariable:this.props.selectVariable,plotName:this.props.selected_variable.name[0],ipython:this.props.ipython});if(this.state.shouldShowStopDownload){pointsLoaded=React.DOM.p(null,"Rows Loaded: ",this.state.pointsLoaded);button=React.DOM.button({className:"canvas-scatter-stopDownloadButton",type:"button",onClick:this.cancelTasks,style:{color:"red"}},"Stop Retrieving Data");br=React.DOM.br(null)}return React.DOM.div(null,pointsLoaded,button,br,React.DOM.div({className:"canvas-scatter-title",style:{width:""+this.state.width,"padding-left":""+(this.state.width-325)/2,"margin-left":""+75}}),plotToShow)}})}});